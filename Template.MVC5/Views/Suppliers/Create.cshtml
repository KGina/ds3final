@model AbantwanaWebMaster.Model.Supplier

@{
                /**/

                ViewBag.Title = "Create";
}
<html>
<head>

</head>
<style>

    .container {
        position: relative;
        max-width: 100%;
        margin: 0 auto;
    }


    h3 {
        color: darkblue;
        font-weight: bold;
    }

    .w3-btn {
        width: 150px;
    }


    #myBtn {
        display: none;
        position: fixed;
        bottom: 20px;
        right: 30px;
        z-index: 99;
        font-size: 18px;
        border: none;
        outline: none;
        background-color: blue;
        color: white;
        cursor: pointer;
        padding: 15px;
        border-radius: 4px;
    }

        #myBtn:hover {
            background-color: #555;
        }

    a.mybtn {
        background: red;
        color: white;
        display: inline-block;
        padding: 6px 12px 6px 12px;
        text-decoration: none;
    }

    h3 {
        font-style: oblique;
    }

    hr.new4 {
        border: 3px solid black;
    }

    form-group1 {
        align-content: left;
    }
</style>



<body>
    <center>



        @*<div class="container-fluid" style="background-color:black">*@
        <div style="background-color:">

            <div class="card shadow mb-4" style="background-color: ; width:70%">
                <div class="card-header ">
                    <div style=" font-size:15px;">

                        <div style="background-color:white; height:37px;width:100% ;font-size:15px;">

                            <h2> New Supplier</h2>
                            @*@Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-default" })

                                @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-default" })*@
                        </div>

                        <hr class="new4">
                    </div>
                </div>
                <button onclick="topFunction()" id="myBtn" title="Go to top" style="width:5%">Top</button>
                <div class="container">

                    <div class="content" style="text-align:left">

                  
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                             
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                                <div class="form-group">
                                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.physicaladdress, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.physicaladdress, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.physicaladdress, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.phonenumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.phonenumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.phonenumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                   @Html.LabelFor(model => model.archive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.archive)
                            @Html.ValidationMessageFor(model => model.archive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-success" />
                                    </div>
                                </div>
                            </div>
                        }
                        <div>
                            @Html.ActionLink("Back to List", "Index")
                        </div>

                  
                    </div>




                </div>
            </div>

    </center>


    <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function () { scrollFunction() };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("myBtn").style.display = "block";
            } else {
                document.getElementById("myBtn").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }


  
    </script>




</body>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
